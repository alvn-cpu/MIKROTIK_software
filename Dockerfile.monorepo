# Multi-stage Dockerfile for monorepo with frontend and backend

# Frontend build stage
FROM node:20-alpine AS frontend-build
WORKDIR /app

# Copy root package.json first (if exists)
COPY package*.json .npmrc* ./

# Copy backend package.json (in case of workspace dependencies)
COPY backend/package*.json ./backend/

# Copy frontend package.json
COPY frontend/package*.json ./frontend/

# Install all dependencies
RUN npm ci --omit=optional --no-audit --no-fund

# Build frontend
WORKDIR /app/frontend
COPY frontend ./
RUN npm run build

# Backend build stage
FROM node:20-alpine AS backend-build
WORKDIR /app

# Copy backend package.json
COPY backend/package*.json ./

# Install backend dependencies
RUN npm ci --only=production --omit=optional --no-audit --no-fund

# Copy backend source
COPY backend ./

# Production stage - serve both frontend and backend
FROM node:20-alpine AS production
WORKDIR /app

# Copy backend build
COPY --from=backend-build /app ./

# Copy frontend build to serve as static files
COPY --from=frontend-build /app/frontend/build ./public

# Expose port
EXPOSE 3000

# Set environment
ENV NODE_ENV=production

# Start the backend server
CMD ["node", "server.js"]